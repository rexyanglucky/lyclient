import { bindActionCreators } from 'redux'
import { connect } from 'react-redux'
import Manage from '../components/manage/manage'
import * as Actions from '../actions';


function mapStateToProps(state) {
   const {articleList}=state;
return {articleList};
  // return { "articleList": [
  //     { "_id": "5a46201a88a6c3419027e419",
  //      "content": "这是本站第一篇正儿八经的文字。\r\n\r\n从开始有想法搭建一个个人博客站点到筹划到实施 域名购买，云服务器申请，域名备案，代码编写，也有将近两三个月的时间了。尚有许多功能工作要做，还需规划运营，总之有了第一步，也算是开张啦。这篇算是开张剪彩的文字吧，留个纪念。\r\n\r\n照片是在一座山上，俯瞰海淀，蓝天白云，也希望本站如此图片般美好留恋。\r\n", "title": "开站记录一", "author": "rex", "createTime": "Fri, 29 Dec 2017 10:59:38 GMT", "updateTime": "Fri, 29 Dec 2017 10:59:38 GMT", "headImg": "uploadFile/IMG_2618.jpg" }, { "_id": "5a46213088a6c3419027e41a", "content": "[TOC]\r\n\r\ncentos\r\n#### 1. 服务器购买及连接\r\n\t安装xshell\r\n\t手机阿里云 ssh连接\r\n#### 1. 基础配置\r\n\t用户组 文件系统 防火墙相关\r\n#### 2.环境安装\r\n1. 安装mongo数据库,守护进程启动mongo\r\n2. 安装node 环境\r\n3. 安装nginx\r\n4. 配置https\r\n5. 上传后台服务接口\r\n6. 上传网站\r\n\r\n#### 3.域名及https配置\r\n1. 配置域名解析\r\n2. 域名认证\r\n3. https 配置", "title": "搭建步骤记录一", "headImg": "uploadFile/timg.jpg", "author": "rex", "createTime": "Fri, 29 Dec 2017 11:04:16 GMT", "updateTime": "Fri, 29 Dec 2017 11:04:16 GMT" }, { "_id": "5a9a8176d9d5d150626ac567", "content": "\r\n\r\n这两天想看下百度的搜索排名情况，在百度中搜索`梁语小站`,展现结果如图，除去广告排名第一。\r\n然而细看却发现没有文章列表，写的文章都搜索不到。\r\n\r\n原因是博客采用react spa 方式，数据内容进行异步加载。百度这边对于异步加载抓取还不完善;\r\n\r\n针对这个问题，自然就想到采用react 服务端渲染。由于之前一直使用vue ,对于react 不是太了解，踩了不少坑。\r\n将自己的实践方法和心得做下记录。\r\n>注：还有一种方式可以针对SPA站点的SEO问题，prerender.io 具体使用phantom.js 模拟浏览器进行异步请求。将结果缓存，在搜索引擎爬虫爬取时返回缓存的页面。此处暂时不使用该方法，以后再研究。\r\n\r\n\r\n![排名情况](https://thumbnail10.baidupcs.com/thumbnail/5b887b77192a6f49305926694d16ccb3?fid=3070869489-250528-604417442837291&time=1520067600&rt=pr&sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-vnvBTrRXsDmBEslGUHcV34nH%2b%2f4%3d&expires=8h&chkbd=0&chkv=0&dp-logid=1432063455155475682&dp-callid=0&size=c1920_u1200&quality=90&vuk=3070869489&ft=image)\r\n\r\n\r\n##### 概念\r\n>此处所提到的服务端渲染和传统的php,java,.net,python 等后端渲染html模板，然后再返回到浏览器渲染，还是有些区别的。\r\n\r\n\r\n\r\n\r\n", "title": "搭建一系列 开发之 react服务端渲染", "author": "rex", "createTime": "Sat, 03 Mar 2018 11:05:26 GMT", "updateTime": "Sat, 03 Mar 2018 11:05:26 GMT", "headImg": "uploadFile/42563cb14197456c8ecb0ad0f8ebfbcc_th.png" }, { "_id": "5a7bf471d9d5d150626ac55a", "content": "centos nginx 配置免费https ssl 证书\r\n\r\n\r\n\r\n#### 说明\r\nhttps 是大趋势，需要给个人博客添加https配置。[Let’s Encrypt](https://letsencrypt.org/) 是一个不错的选择，免费，到期可以自动更新。\r\n自己不是专业运维人员，只是叙述下自己的实施方法和碰到的问题，如有问题，请多多指教。\r\n\r\n#### 环境\r\n1. CentOS 7\r\n2. nginx/1.12.2\r\n\r\n#### 软件安装\r\n1. 需要安装EPEL 扩展yum源\r\n\r\n   `yum install -y epel-release`\r\n\r\n2. 安装certbot\r\n\r\n\t`yum install -y cerbot`\r\n\r\n#### 配置目录及软连接\r\n1. 首先创建`.well-known` 文件夹，其次在你想要配置的网站根目录创建软连接，连接到 `.well-known` 文件夹，生成证书时会使用到，命令如下。\r\n```\r\n\tmkdir -p /usr/local/nginx/cert/.well-known \r\n    ln -s /usr/local/nginx/cert/.well-known /etc/nginx/yangliangyu.com/.well-known\r\n```\r\n\r\n#### 执行命令生成证书\r\n\r\n`certbot certonly --webroot -w /usr/local/nginx/cert -d yangliangyu.com`\r\n\r\n按步骤输入邮箱，生成证书。证书存放在`/etc/letsencrypt/live/yangliangyu.com `中\r\n分别为\r\n- cert.pem\r\n- chain.pem\r\n- fullchain.pem\r\n- privkey.pem\r\n\r\n#### 配置nginx.conf\r\n\r\n\r\n```\r\nserver {\r\n    listen       443 ssl;\r\n    server_name yangliangyu.com www.yangliangyu.com;\r\n    ssl_certificate      /etc/letsencrypt/live/yangliangyu.com/fullchain.pem;\r\n    ssl_certificate_key  /etc/letsencrypt/live/yangliangyu.com/privkey.pem;\r\n\r\n    ssl_session_cache    shared:SSL:1m;\r\n    ssl_session_timeout  5m;\r\n\r\n    ssl_ciphers  HIGH:!aNULL:!MD5;\r\n    ssl_prefer_server_ciphers  on;\r\n    server_name ~^(www\\.)?(.+)$;\r\n    access_log logs/$2-access.log main;\r\n    error_log logs/$2-error.log;\r\n\r\n\r\n     location / {\r\n                 root /etc/nginx/lyapp/client;\r\n                try_files $uri $uri/ @router;\r\n                index index.html index.htm;\r\n         }\r\n     # 单页面 路由重定向\r\n     location @router {\r\n             rewrite ^.*$ /index.html last;\r\n         }\r\n\r\n     location = /50x.html {\r\n             root   html;\r\n         }\r\n\r\n}\r\n```\r\n\r\n#### 设置定期更新证书\r\n\r\n1. let's Encrypt 提供了定期跟新证书命令，添加到定时任务，90天更新一层\r\n```\r\n\tcrontab -e\r\n    10 6 * * *  /bin/certbot renew --quiet &>/dev/null\r\n```\r\n\r\n#### http 跳转到 https\r\n\r\n现在网站在访问http时都会将http请求重定向到https，只需在nginx中配置下。配置如下\r\n```\r\nserver {\r\n        listen 80 default_server;\r\n        server_name yangliangyu.com www.yangliangyu.com;\r\n \t\treturn      301 https://$server_name$request_uri;\r\n        #charset koi8-r;\r\n}\r\n\r\n```\r\n\r\n\r\n#### 实施过程中遇到的问题\r\n1. 执行命令生成证书后，配置https 报错 提示缺少`ngx_http_ssl_module`。\r\n   > 网上查找，因为在安装nginx时未安装http_ssl_module 模块，需要重新编译安装。\r\n    - 找到相同版本安装包\r\n    - 重新解压\r\n    \t`tar -zxvf nginx-1.12.2.tar.gz`\r\n    - 配置，配置时需要带上`--with-http_ssl_module` 命令如下\r\n    \t`./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module`\r\n    - make安装，不要执行make install 安装 命令如下\r\n    \t`make`\r\n    - 将make完成的nginx 命令 copy 到之前install的目录下,并覆盖之前文件\r\n    - 结束\r\n[具体操作步骤点击查看博客园帖子](https://www.cnblogs.com/ghjbk/p/6744131.html)\r\n\r\n2. 配置完成，启动nginx时，提示错误 ==nginx: [emerg] getpwnam(“www”) failed==\r\n > 在系统中没有 www 用户或用户组，有两种解决方法\r\n\r\n\t- 方案一\r\n\t\t- 创建www 用户\r\n    \t```\r\n        /usr/sbin/groupadd -f www\r\n/usr/sbin/useradd -g www www\r\n        ```\r\n    - 方案二\r\n    \t- 在nginx.conf 配置中将 user nobody 注释放开\r\n\r\n\r\n\r\n\r\n", "title": "搭建一系列之https 配置", "author": "rex", "createTime": "Thu, 08 Feb 2018 06:55:45 GMT", "updateTime": "Thu, 08 Feb 2018 06:55:45 GMT", "headImg": "uploadFile/TIM截图20180208144350.png" }, { "_id": "5a8e8d21d9d5d150626ac565", "content": "1. netscape\r\n2. useragent 逐步演化\r\n3. 浏览器内核\r\n\r\n| 浏览器内核 | 代表浏览器 |\r\n|--------|--------|\r\n|Trident|Internet Explorer|\r\n|Gecko|Firefox|\r\n|WebKit|Safari , Andriod 浏览器|\r\n|BLink|Chrome|\r\n|Presto|Opera |\r\n\r\n#### 4. webkit 渲染过程 ####\r\n\r\n1. 用户输入URL,WebKit调用资源加载器加载该URL对应的网页。\r\n2. 加载器依赖网络模块建立连接，发送请求并接收答复。\r\n3. WebKit 接收到各种网页或者资源的数据，某些资源可能是同步或者异步获取的。\r\n4. 网页被交给HTML解释器转变成一系列的关键词（Token）。\r\n5. 解释器根据关键词构建节点（Node）,形成DOM树。\r\n6. 如果节点是JavaScript代码，调用JavaScript引擎解释并执行。\r\n7. JavaScript 代码可能会修改DOM树的结构。\r\n8. 如果节点需要依赖其他资源，例如img,css,视频等，调用资源加载器来加载，但是它们是异步的，不会阻碍DOM树的继续创建；如果是JavaScript资源URL（没有标记 异步方式 async），则需要停止当前DOM树的创建，直到JavaScript的资源加载并被JavaScript执行完毕后才继续DOM树的创建\r\n> 在上述的过程中，网页在加载和渲染中会发出 `DomContent` 事件和DOM的`onload`事件，分别在DOM树构建完成之后，以及DOM树构建完成并且网页所依赖的资源都加载完之后发生，因为某些资源的加载并不会阻碍DOM树的创建，所以这两个事件多数时候不是同时发生的。\r\n\r\n\r\n* * *\r\n\r\n\r\n\r\n- - -\r\n 接下来就是WebKit 利用css和DOM树构建RenderObject树直到绘图上下文。\r\n\r\n\r\n\r\n", "title": "webKit 解密 读书笔记 1", "headImg": "uploadFile/TIM截图20180222172733.png", "author": "rex", "createTime": "Thu, 22 Feb 2018 09:28:01 GMT", "updateTime": "Thu, 22 Feb 2018 09:28:01 GMT" }, { "_id": "5a9623a0d9d5d150626ac566", "content": "解析一段js代码，参数名和变量名相同，作用域链问题\r\n\r\n两个函数同样的代码，输出结果不同\r\n```\r\nfunction a(id, name) {\r\n    console.log(id,name);\r\n    id=id||1;\r\n    name=name||'rex';\r\n    console.log(id,name);\r\n    function d(){\r\n        console.log(id,name);\r\n        var id=id||1;\r\n        var name=name||'rex';\r\n        console.log(id,name);\r\n    }\r\n    d();\r\n}\r\nvar h=new a(2,'rex2');\r\n```\r\n\r\n输出结果为\r\n```\r\n2,'rex2'\r\n2,'rex2'\r\nundefined,undefined\r\n1,'rex'\r\n```\r\n\r\n####解析\r\n> 涉及到变量提升，作用域链问题\r\n\r\n由于js 变量声明存在变量提升问题，将变量声明提升到当前作用域的顶部。\r\n因此真正的执行顺序为\r\n```\r\nfunction a(id, name) {\r\n\tvar id,name;//由于已存在id和name 变量因此当前声明无效，具体见下面第1条说明\r\n    console.log(id,name);//因此输出为传入的值 2，rex2\r\n    id=id||1;\r\n    name=name||'rex';\r\n    console.log(id,name);//以上给变量赋值，输出为修改后的值 2，rex2\r\n    function d(){\r\n    \tvar id,name;//当前作用域下没有声明id和name变量，因此此次声明有效\r\n        console.log(id,name);//输出为 undefined undefined\r\n        id=id||1;\r\n        name=name||'rex';\r\n        console.log(id,name);//以上给变量赋值，输出为修改后的值 1，rex\r\n    }\r\n    d();\r\n}\r\nvar h=new a(2,'rex2');\r\n```\r\n\r\n1. 在js中对于变量的宣告，是对剖析器的指示(directive)，而不是在执行期的命令(command)，不要忘了js是个直译式的脚本语言，所有的真实执行，是由js引擎中的剖析器(或分析器)，先对代码作整理剖析完了，才会执行。有个最明显的特性是变量的类型是动态的，要看赋给变量什么值，才会决定这个变量的类型，你给变量一个数字，变量就变为数字类型，给它个字串，它就是个字串类型。js在执行时会对相同变量宣告作归纳的处理，以最近的变量指定作为变量在执行时的值。\r\n", "title": "解析一段js代码，参数名和变量名相同，作用域链问题", "headImg": "uploadFile/QQ截图20180228113514.jpg", "author": "rex", "createTime": "Wed, 28 Feb 2018 03:36:00 GMT", "updateTime": "Wed, 28 Feb 2018 03:36:00 GMT" }] };
}
// const mapStateToProps = (state) => ({
//   counter: state.counter
// })

const mapDispatchToProps = (dispatch) => {
  return bindActionCreators(Actions, dispatch)
}

// export default connect(mapStateToProps, mapDispatchToProps)(Counter)
export default connect(mapStateToProps,mapDispatchToProps)(Manage);
